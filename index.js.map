{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// підключення бібліотеки axios https://axios-http.com/docs/intro \nimport axios from 'axios';\n\n//3 функція вилучення  https://pixabay.com/ru/users/45653057/ 45653057-33cc59a572348b879eba9c5b0\nexport async function gettingData(inputSearch, pageGrowth = 1) {\n \n    // базова адреса для звернень\n    axios.defaults.baseURL = \"https://pixabay.com\";\n   \n   /* const myApiKey = \"45653057-33cc59a572348b879eba9c5b0\";\n    //заголовок що однаковий для всіх запитів\n    axios.defaults.headers.common[\"key\"] = myApiKey;*/\n\n    // console.log(axios.defaults.headers)\n\n      const response = await axios.get(\n        \"/api/\", {\n            params: {\n    key:\"45653057-33cc59a572348b879eba9c5b0\",\n    q: `${inputSearch}`,\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n    page: `${pageGrowth}`,\n    per_page: 15,\n            }\n      });\n    \n    return response.data\n}","//4 функція для відображення зображень та данних\nexport function renderData(dataImgArr, userListEl) {\n     \n    // дефрагментація\n    const markup = dataImgArr.map(({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n    }) => {\n        return `<li class=\"gallery-list-item\">\n                    <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                        <img class=\"img\" src=\"${webformatURL}\" \n                        alt=\"${tags}\" \n                        title=\"${tags}\" />\n                    </a>\n                    <ul class=\"data-list\">\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Likes</p>\n                            <p class=\"data-numbers\">${likes}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Views</p>\n                            <p class=\"data-numbers\">${views}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Comments</p>\n                            <p class=\"data-numbers\">${comments}</p>\n                        </li>\n                        <li class=\"data-item\">\n                            <p class=\"data-item-name\">Downloads</p>\n                            <p class=\"data-numbers\">${downloads}</p>\n                        </li>\n                    </ul> \n          </li>`;\n    }).join(\"\");\n    \n    userListEl.insertAdjacentHTML(\"beforeend\", markup);\n}","//імпорт бібліотек НА ПОЧАТКУ!\n//iziToast ДЛЯ виведення повідомлень сайт https://www.npmjs.com/package/izitoast https://marcelodolza.github.io/iziToast/\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n//simplelightbox ДЛЯ відтворення великих картинок https://www.npmjs.com/package/simplelightbox\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n// підключення бібліотеки axios https://axios-http.com/docs/intro\nimport axios from 'axios';\n\n//імпорт з сусідніх файлів дж ес\nimport { gettingData } from './js/pixabay-api.js';\nimport { renderData } from './js/render-functions.js';\n\n// ключ що прриходить на https://pixabay.com\n\n//1.створення форми для пошуку та результуючого ul картинок\nconst bodySelect = document.querySelector(\"body\");\nconst firstHtml = \n`<div class=\"container\">\n    <form class=\"formFetchEl\">\n\t\t<input type=\"text\" class=\"search-input\" name=\"search\" />\n\t\t<button type=\"submit\" class=\"btnEl\">Search</button>\n    </form>\n    <span class=\"loader\">Loading</span>\n\t  <ul class=\"galleryEl\"></ul>\n      <span class=\"loader-more\">Loading</span>\n      <button type=\"button\" class=\"btnMorePostsEl\">Load more</button>\n</div>`;\n\nbodySelect.insertAdjacentHTML(\"afterbegin\", firstHtml)\n//0 завантажувач кнопка\nconst loader = document.querySelector(\".loader\");\nconst loaderMore = document.querySelector(\".loader-more\");\nconst btnMorePosts = document.querySelector(\".btnMorePostsEl\");\nconst input = document.querySelector(\".search-input\");\n //0 прибирання з виду завантажувача кнопки\nloader.style.display = 'none';\nbtnMorePosts.style.display = 'none';\nloaderMore.style.display = 'none';\n\n// створення вигляду для бібліотеки що відкрива картинки                  \nlet gallery = new SimpleLightbox('.galleryEl a', {\n                    caption: true,\n                    captionDelay: 250,\n                    captionsData: 'alt',\n                    });\n\n//2 функія для отримання фото\nconst gettingUserForm = document.querySelector(\"form\");\nconst userList = document.querySelector(\".galleryEl\");\nlet pageGrowthJs = 1;\nlet inputSearchListener;\n\nasync function addImage(InputSearch, pageGrowthJs, eventCome) {\n    \n    const comingsImg = await gettingData(InputSearch, pageGrowthJs)\n    try {              \n           if (comingsImg.hits.length === 0) {\n                //попередження .......IZITOST.......\n                //alert(\"Sorry, there are no images matching your search query. Please try again!\");\n                 iziToast.show({\n                message: \"Sorry, there are no images matching <br> your search query. Please try again!\",\n                messageColor: \"#000\",\n                messageSize: \"18px\",\n                messageLineHeight: \"20px\",\n                backgroundColor: \"rgb(255,153,102)\",\n                position: \"topRight\", \n                image: './img/bi_x-octagon.svg',\n                imageWidth: 30,\n                 });\n                 // добавити скруглення для iziToast\n            const iziToastElStyle = document.querySelector(\".iziToast\");\n            iziToastElStyle.style.borderRadius = '10px';\n                iziToastElStyle.style.overflow = 'hidden';\n                //добавить стилі на іконку в ізітост\n                 const iziToastImgStyle = document.querySelector(\".iziToast-cover\");\n            iziToastImgStyle.style.backgroundColor = 'transparent';\n                iziToastImgStyle.style.left = \"10px\";\n                 \n            } else {\n               //очистка попереднього вмісту карток та створення нових \".galleryEl\" для сабміту\n               if (eventCome?.type === \"submit\") {\n                   userList.innerHTML = '';\n                   //0 завантажувач видимий\n                    loader.style.display = 'block';\n               } else {\n                  loaderMore.style.display = 'block';\n                   }\n                \n               renderData(comingsImg.hits, userList);\n            //    console.log(comingsImg)\n               //_______прибирання кнопки та повідомлення при кількості постів______\n               const li = userList.querySelectorAll('li');\n               if (comingsImg.totalHits <= li.length) {\n                   \n                    //попередження .......IZITOST.......\n                 iziToast.show({\n                message: \"We're sorry, but you've reached the end of search results.\",\n                messageColor: \"#000\",\n                messageSize: \"18px\",\n                messageLineHeight: \"20px\",\n                backgroundColor: \"rgb(37, 150, 190)\",\n                position: \"topRight\", \n                 });\n                 // добавити стилі для iziToast\n                   const iziToastElStyle = document.querySelector(\".iziToast\");\n                   iziToastElStyle.style.borderRadius = '10px';\n                   iziToastElStyle.style.overflow = 'hidden';\n                   const iziToastEl = document.querySelector(\".iziToast-wrapper\");\n                    iziToastEl.style.position = 'fixed';\n        \n\n                   btnMorePosts.style.display = 'none';\n                   // Сховати індикатор завантаження після завантаження всіх картинок\n                        if (eventCome?.type === \"submit\") {\n                        //0 завантажувач невидимий\n                        loader.style.display = 'none';\n                        } else {\n                        loaderMore.style.display = 'none';\n                        }\n               return\n               }\n                 \n                   //метод для оновлення бібліотеки для асинхрону\n               gallery.refresh() \n               \n                 //0 Перевірте завантаження всіх зображень\n           const images = userList.querySelectorAll('img');\n            let loadedImagesCount = 0;\n// ???????? ЯК ЗРОБИТИ ЩОБ forEach ПЕРЕВІРЯВ ЗАВЕРШЕННЯ ЗАВАНТАЖЕННЯ КАРТИНОК \n// ПРИ ЗАВЕРШЕННІ ВИКОНУВАЛАСЬ ФУНКЦІЯ ПЕРЕВІРКИ РОЗМІРУ КАРТКИ(ДОБАВИТИ async/awaitv??)\n            images.forEach(img => {\n                if (img.complete) {\n                    // \n                    // console.log(img.complete)\n                    loadedImagesCount++;\n                    if (loadedImagesCount === images.length) {\n                        // Сховати індикатор завантаження після завантаження всіх картинок\n                        if (eventCome?.type === \"submit\") {\n                        //0 завантажувач невидимий\n                        loader.style.display = 'none';\n                        } else {\n                        loaderMore.style.display = 'none';\n                        }\n                    } \n                } else {\n                    img.addEventListener('load', () => {\n                        loadedImagesCount++;\n                        if (loadedImagesCount === images.length) {\n                            // Сховати індикатор завантаження після завантаження всіх картинок\n                            if (eventCome?.type === \"submit\") {\n                        \n                            loader.style.display = 'none';\n                            } else {\n                            loaderMore.style.display = 'none';\n                            }\n                        } \n                    });\n                }\n                \n\n            });\n               // ==============================================================\n            //    ?????????????????????НЕСПРАЦЬОВУЄ ПРОКРУТКА???????????????????????????\n                    const elem = document.querySelector(\".gallery-list-item\");\n                const rect = elem.getBoundingClientRect().height * 2;\n               console.log(rect)\n               window.scrollBy({\n                top: rect,\n                behavior: \"smooth\",\n               });\n               window.scrollBy(0, rect);\n\n\n             }\n        }\n        catch (error) {\n            //попередження .......IZITOST.......\n                //alert(`Sorry, ${error}. Please try again!`);\n                 iziToast.show({\n                message: `Sorry, ${error}. Please try again!`,\n                messageColor: \"#000\",\n                messageSize: \"18px\",\n                messageLineHeight: \"20px\",\n                backgroundColor: \"rgb(255,153,102)\",\n                position: \"topRight\",              \n                 });\n                 // добавити скруглення для iziToast\n                    const iziToastElStyle = document.querySelector(\".iziToast\");\n                    iziToastElStyle.style.borderRadius = '10px';\n                    const iziToastEl = document.querySelector(\".iziToast-wrapper\");\n                    iziToastEl.style.position = 'fixed';\n                    iziToastElStyle.style.overflow = 'hidden';\n    } \n}\n\n//слухач для сабміту прибера дефолтні події лічильньник сторінки поверта до 1 по значенню з інпуту створює сторінку додає лічильник сторінки відобража кнопку додавання інших сторінок \ngettingUserForm.addEventListener(\"submit\", (event) => {\n    event.preventDefault();\n    btnMorePosts.style.display = 'none';\n    pageGrowthJs = 1;\n    inputSearchListener = event.currentTarget.elements.search.value.toLowerCase().trim();\n    \n      if (!inputSearchListener) {\n        return\n    };\n    addImage(inputSearchListener, pageGrowthJs, event); \n    pageGrowthJs++;\n    btnMorePosts.style.display = 'block';\n});\n\n//слухач для кнопки додає лічильник сторінки по значенню з інпута шука наступну сторінку\nbtnMorePosts.addEventListener(\"click\", (event) => {\n    pageGrowthJs++;\n    \n      if (!inputSearchListener) {\n        return\n    };\n    addImage(inputSearchListener, pageGrowthJs); \n    \n});"],"names":["gettingData","inputSearch","pageGrowth","axios","renderData","dataImgArr","userListEl","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","bodySelect","firstHtml","loader","loaderMore","btnMorePosts","gallery","SimpleLightbox","gettingUserForm","userList","pageGrowthJs","inputSearchListener","addImage","InputSearch","eventCome","comingsImg","iziToast","iziToastElStyle","iziToastImgStyle","li","iziToastEl","images","loadedImagesCount","img","rect","error","event"],"mappings":"owBAIO,eAAeA,EAAYC,EAAaC,EAAa,EAAG,CAG3D,OAAAC,EAAM,SAAS,QAAU,uBAQN,MAAMA,EAAM,IAC3B,QAAS,CACL,OAAQ,CAChB,IAAI,qCACJ,EAAG,GAAGF,CAAW,GACjB,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAM,GAAGC,CAAU,GACnB,SAAU,EACD,CACb,CAAO,GAEa,IACpB,CC5BO,SAASE,EAAWC,EAAYC,EAAY,CAG/C,MAAMC,EAASF,EAAW,IAAI,CAAC,CAC3B,aAAAG,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,oDACqCL,CAAa;AAAA,gDACjBD,CAAY;AAAA,+BAC7BE,CAAI;AAAA,iCACFA,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,sDAKiBC,CAAK;AAAA;AAAA;AAAA;AAAA,sDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,sDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,sDAIRC,CAAS;AAAA;AAAA;AAAA,gBAI1D,EAAE,KAAK,EAAE,EAEVR,EAAW,mBAAmB,YAAaC,CAAM,CACrD,CCxBA,MAAMQ,EAAa,SAAS,cAAc,MAAM,EAC1CC,EACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWAD,EAAW,mBAAmB,aAAcC,CAAS,EAErD,MAAMC,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,iBAAiB,EAC/C,SAAS,cAAc,eAAe,EAEpDF,EAAO,MAAM,QAAU,OACvBE,EAAa,MAAM,QAAU,OAC7BD,EAAW,MAAM,QAAU,OAG3B,IAAIE,EAAU,IAAIC,EAAe,eAAgB,CAC7B,QAAS,GACT,aAAc,IACd,aAAc,KAClC,CAAqB,EAGrB,MAAMC,EAAkB,SAAS,cAAc,MAAM,EAC/CC,EAAW,SAAS,cAAc,YAAY,EACpD,IAAIC,EAAe,EACfC,EAEJ,eAAeC,EAASC,EAAaH,EAAcI,EAAW,CAE1D,MAAMC,EAAa,MAAM7B,EAAY2B,EAAaH,CAAY,EAC9D,GAAI,CACG,GAAIK,EAAW,KAAK,SAAW,EAAG,CAG5BC,EAAS,KAAK,CACf,QAAS,gFACT,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,mBACjB,SAAU,WACV,MAAO,yBACP,WAAY,EAC5B,CAAkB,EAEN,MAAMC,EAAkB,SAAS,cAAc,WAAW,EAC1DA,EAAgB,MAAM,aAAe,OACjCA,EAAgB,MAAM,SAAW,SAEhC,MAAMC,EAAmB,SAAS,cAAc,iBAAiB,EACtEA,EAAiB,MAAM,gBAAkB,cACrCA,EAAiB,MAAM,KAAO,MAE9C,KAAmB,EAEAJ,GAAA,YAAAA,EAAW,QAAS,UACpBL,EAAS,UAAY,GAEpBN,EAAO,MAAM,QAAU,SAEzBC,EAAW,MAAM,QAAU,QAG9Bd,EAAWyB,EAAW,KAAMN,CAAQ,EAGpC,MAAMU,EAAKV,EAAS,iBAAiB,IAAI,EACzC,GAAIM,EAAW,WAAaI,EAAG,OAAQ,CAGrCH,EAAS,KAAK,CACf,QAAS,6DACT,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,oBACjB,SAAU,UAC1B,CAAkB,EAEC,MAAMC,EAAkB,SAAS,cAAc,WAAW,EAC1DA,EAAgB,MAAM,aAAe,OACrCA,EAAgB,MAAM,SAAW,SACjC,MAAMG,EAAa,SAAS,cAAc,mBAAmB,EAC5DA,EAAW,MAAM,SAAW,QAG7Bf,EAAa,MAAM,QAAU,QAEpBS,GAAA,YAAAA,EAAW,QAAS,SAExBX,EAAO,MAAM,QAAU,OAEvBC,EAAW,MAAM,QAAU,OAEpC,MACC,CAGDE,EAAQ,QAAS,EAGrB,MAAMe,EAASZ,EAAS,iBAAiB,KAAK,EAC7C,IAAIa,EAAoB,EAGxBD,EAAO,QAAQE,GAAO,CACdA,EAAI,UAGJD,IACIA,IAAsBD,EAAO,UAEzBP,GAAA,YAAAA,EAAW,QAAS,SAExBX,EAAO,MAAM,QAAU,OAEvBC,EAAW,MAAM,QAAU,SAI/BmB,EAAI,iBAAiB,OAAQ,IAAM,CAC/BD,IACIA,IAAsBD,EAAO,UAEzBP,GAAA,YAAAA,EAAW,QAAS,SAExBX,EAAO,MAAM,QAAU,OAEvBC,EAAW,MAAM,QAAU,OAGvD,CAAqB,CAIrB,CAAa,EAIG,MAAMoB,EADW,SAAS,cAAc,oBAAoB,EAC1C,sBAAqB,EAAG,OAAS,EACpD,QAAQ,IAAIA,CAAI,EAChB,OAAO,SAAS,CACf,IAAKA,EACL,SAAU,QAC1B,CAAgB,EACD,OAAO,SAAS,EAAGA,CAAI,CAGxB,CACL,OACMC,EAAO,CAGLT,EAAS,KAAK,CACf,QAAS,UAAUS,CAAK,sBACxB,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,mBACjB,SAAU,UAC1B,CAAkB,EAEE,MAAMR,EAAkB,SAAS,cAAc,WAAW,EAC1DA,EAAgB,MAAM,aAAe,OACrC,MAAMG,EAAa,SAAS,cAAc,mBAAmB,EAC7DA,EAAW,MAAM,SAAW,QAC5BH,EAAgB,MAAM,SAAW,QAChD,CACL,CAGAT,EAAgB,iBAAiB,SAAWkB,GAAU,CAClDA,EAAM,eAAc,EACpBrB,EAAa,MAAM,QAAU,OAC7BK,EAAe,EACfC,EAAsBe,EAAM,cAAc,SAAS,OAAO,MAAM,cAAc,OAEvEf,IAGPC,EAASD,EAAqBD,EAAcgB,CAAK,EACjDhB,IACAL,EAAa,MAAM,QAAU,QACjC,CAAC,EAGDA,EAAa,iBAAiB,QAAUqB,GAAU,CAC9ChB,IAEOC,GAGPC,EAASD,EAAqBD,CAAY,CAE9C,CAAC"}